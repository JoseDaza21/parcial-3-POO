/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package core.views;

import core.models.Account;
import core.models.Transaction;
import core.models.utils.TransactionType;
import core.models.User;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import core.controllers.IUserController;
import core.controllers.utils.Response;

/**
 *
 * @author edangulo
 */
public class BankView extends javax.swing.JFrame {

    private ArrayList<Account> accounts;
    private ArrayList<Transaction> transactions;
    private ArrayList<User> users;
    private IUserController userController;

    /**
     * Creates new form BankFrame
     */
    public BankView(IUserController userController) {
        initComponents();
        this.accounts = new ArrayList<>();
        this.transactions = new ArrayList<>();
        this.users = new ArrayList<>();
        
        // controllers
        this.userController = userController;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        RegisterUserTitle = new javax.swing.JLabel();
        IDLabel = new javax.swing.JLabel();
        FirstnameLabel = new javax.swing.JLabel();
        LastnameLabel = new javax.swing.JLabel();
        AgeLabel = new javax.swing.JLabel();
        IDTextField = new javax.swing.JTextField();
        FirstnameTextField = new javax.swing.JTextField();
        LastnameTextField = new javax.swing.JTextField();
        AgeTextField = new javax.swing.JTextField();
        RegisterUserButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        CreateAccountTitle = new javax.swing.JLabel();
        UserIDLabel = new javax.swing.JLabel();
        InitialBalanceLabel = new javax.swing.JLabel();
        UserIDTextField = new javax.swing.JTextField();
        InitialBalanceTextField = new javax.swing.JTextField();
        CreateAccountButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        MakeTransactionTitle = new javax.swing.JLabel();
        TypeLabel = new javax.swing.JLabel();
        SourceAccountLabel = new javax.swing.JLabel();
        DestinationAccountLabel = new javax.swing.JLabel();
        AmountLabel = new javax.swing.JLabel();
        SourceAccountTextField = new javax.swing.JTextField();
        DestinationAccountTextField = new javax.swing.JTextField();
        AmountTextField = new javax.swing.JTextField();
        TypeComboBox = new javax.swing.JComboBox<>();
        ExecuteTransactionButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        ListUsersTitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        UsersTable = new javax.swing.JTable();
        RefreshUsersButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        ListAccountsTitle = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        AccountsTable = new javax.swing.JTable();
        RefreshAccountsButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        ListTransactionsTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TransactionsTable = new javax.swing.JTable();
        RefreshTransactionsButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        RegisterUserTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        RegisterUserTitle.setText("Register User");

        IDLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        IDLabel.setText("ID");

        FirstnameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        FirstnameLabel.setText("Firstname");

        LastnameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        LastnameLabel.setText("Lastname");

        AgeLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        AgeLabel.setText("Age");

        RegisterUserButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        RegisterUserButton.setText("Register");
        RegisterUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(RegisterUserTitle)
                        .addGap(0, 270, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FirstnameLabel)
                            .addComponent(LastnameLabel)
                            .addComponent(AgeLabel)
                            .addComponent(IDLabel))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IDTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LastnameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AgeTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(FirstnameTextField, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(259, 259, 259)
                .addComponent(RegisterUserButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(RegisterUserTitle)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IDLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FirstnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FirstnameLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LastnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LastnameLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AgeLabel))
                .addGap(18, 18, 18)
                .addComponent(RegisterUserButton)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Register User", jPanel1);

        CreateAccountTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        CreateAccountTitle.setText("Create Account");

        UserIDLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        UserIDLabel.setText("User ID");

        InitialBalanceLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        InitialBalanceLabel.setText("Initial Balance");

        CreateAccountButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        CreateAccountButton.setText("Create");
        CreateAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateAccountButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(CreateAccountTitle))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UserIDLabel)
                            .addComponent(InitialBalanceLabel))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(InitialBalanceTextField)
                            .addComponent(UserIDTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(265, 265, 265)
                .addComponent(CreateAccountButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(CreateAccountTitle)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UserIDLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InitialBalanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InitialBalanceLabel))
                .addGap(18, 18, 18)
                .addComponent(CreateAccountButton)
                .addContainerGap(163, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Create Account", jPanel2);

        MakeTransactionTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        MakeTransactionTitle.setText("Make Transaction");

        TypeLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        TypeLabel.setText("Type");

        SourceAccountLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        SourceAccountLabel.setText("Source Account");

        DestinationAccountLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        DestinationAccountLabel.setText("Destination Account");

        AmountLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        AmountLabel.setText("Amount");

        DestinationAccountTextField.setToolTipText("");

        TypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Deposit", "Withdraw", "Transfer" }));

        ExecuteTransactionButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        ExecuteTransactionButton.setText("Execute");
        ExecuteTransactionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExecuteTransactionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TypeLabel)
                            .addComponent(AmountLabel)
                            .addComponent(DestinationAccountLabel)
                            .addComponent(SourceAccountLabel))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DestinationAccountTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(SourceAccountTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TypeComboBox, 0, 485, Short.MAX_VALUE)
                            .addComponent(AmountTextField, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(MakeTransactionTitle)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addComponent(ExecuteTransactionButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(MakeTransactionTitle)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TypeLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SourceAccountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SourceAccountLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DestinationAccountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DestinationAccountLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AmountLabel))
                .addGap(18, 18, 18)
                .addComponent(ExecuteTransactionButton)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Make Transaction", jPanel3);

        ListUsersTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ListUsersTitle.setText("List Users");

        UsersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Fullname", "Age", "Number of Accounts"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(UsersTable);

        RefreshUsersButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        RefreshUsersButton.setText("Refresh");
        RefreshUsersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshUsersButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(ListUsersTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RefreshUsersButton)
                        .addGap(88, 88, 88))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ListUsersTitle)
                    .addComponent(RefreshUsersButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("List Users", jPanel4);

        ListAccountsTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ListAccountsTitle.setText("List Accounts");

        AccountsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "User ID", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(AccountsTable);

        RefreshAccountsButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        RefreshAccountsButton.setText("Refresh");
        RefreshAccountsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshAccountsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(ListAccountsTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RefreshAccountsButton)
                .addGap(90, 90, 90))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ListAccountsTitle)
                    .addComponent(RefreshAccountsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("List Accounts", jPanel5);

        ListTransactionsTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ListTransactionsTitle.setText("List Transactions");

        TransactionsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Type", "Source Account ID", "Destination Account ID", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TransactionsTable);

        RefreshTransactionsButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        RefreshTransactionsButton.setText("Refresh");
        RefreshTransactionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshTransactionsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(ListTransactionsTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RefreshTransactionsButton)
                .addGap(89, 89, 89))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ListTransactionsTitle)
                    .addComponent(RefreshTransactionsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("List Transactions", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RegisterUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterUserButtonActionPerformed
        // Get fields text
        String id = IDTextField.getText();
        String firstname = FirstnameTextField.getText();
        String lastname = LastnameTextField.getText();
        String age = AgeTextField.getText();

        // Create a user
        Response response = this.userController.createUser(id, firstname, lastname, age);

        // Show message according to the response
        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Response Message", JOptionPane.INFORMATION_MESSAGE);

            // emtpy fields
            IDTextField.setText("");
            FirstnameTextField.setText("");
            LastnameTextField.setText("");
            AgeTextField.setText("");
        }
    }//GEN-LAST:event_RegisterUserButtonActionPerformed

    private void CreateAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateAccountButtonActionPerformed
        // TODO add your handling code here:
        try {
            int userId = Integer.parseInt(UserIDTextField.getText());
            double initialBalance = Double.parseDouble(InitialBalanceTextField.getText());

            User selectedUser = null;
            for (User user : this.users) {
                if (user.getId() == userId && selectedUser == null) {
                    selectedUser = user;
                }
            }

            if (selectedUser != null) {
                Random random = new Random();
                int first = random.nextInt(1000);
                int second = random.nextInt(1000000);
                int third = random.nextInt(100);

                String accountId = String.format("%03d", first) + "-" + String.format("%06d", second) + "-" + String.format("%02d", third);

                this.accounts.add(new Account(accountId, selectedUser, initialBalance));

                UserIDTextField.setText("");
                InitialBalanceTextField.setText("");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_CreateAccountButtonActionPerformed

    private void ExecuteTransactionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExecuteTransactionButtonActionPerformed
        // TODO add your handling code here:
        try {
            String type = TypeComboBox.getItemAt(TypeComboBox.getSelectedIndex());
            switch (type) {
                case "Deposit": {
                    String destinationAccountId = DestinationAccountTextField.getText();
                    double amount = Double.parseDouble(AmountTextField.getText());

                    Account destinationAccount = null;
                    for (Account account : this.accounts) {
                        if (account.getId().equals(destinationAccountId)) {
                            destinationAccount = account;
                        }
                    }
                    if (destinationAccount != null) {
                        destinationAccount.deposit(amount);

                        this.transactions.add(new Transaction(TransactionType.DEPOSIT, null, destinationAccount, amount));

                        SourceAccountTextField.setText("");
                        DestinationAccountTextField.setText("");
                        AmountTextField.setText("");
                    }
                    break;
                }
                case "Withdraw": {
                    String sourceAccountId = SourceAccountTextField.getText();
                    double amount = Double.parseDouble(AmountTextField.getText());

                    Account sourceAccount = null;
                    for (Account account : this.accounts) {
                        if (account.getId().equals(sourceAccountId)) {
                            sourceAccount = account;
                        }
                    }
                    if (sourceAccount != null && sourceAccount.withdraw(amount)) {
                        this.transactions.add(new Transaction(TransactionType.WITHDRAW, sourceAccount, null, amount));

                        SourceAccountTextField.setText("");
                        DestinationAccountTextField.setText("");
                        AmountTextField.setText("");
                    }
                    break;
                }
                case "Transfer": {
                    String sourceAccountId = SourceAccountTextField.getText();
                    String destinationAccountId = DestinationAccountTextField.getText();
                    double amount = Double.parseDouble(AmountTextField.getText());

                    Account sourceAccount = null;
                    Account destinationAccount = null;
                    for (Account account : this.accounts) {
                        if (account.getId().equals(sourceAccountId)) {
                            sourceAccount = account;
                        }
                    }
                    for (Account account : this.accounts) {
                        if (account.getId().equals(destinationAccountId)) {
                            destinationAccount = account;
                        }
                    }
                    if (sourceAccount != null && destinationAccount != null && sourceAccount.withdraw(amount)) {
                        destinationAccount.deposit(amount);

                        this.transactions.add(new Transaction(TransactionType.TRANSFER, sourceAccount, destinationAccount, amount));

                        SourceAccountTextField.setText("");
                        DestinationAccountTextField.setText("");
                        AmountTextField.setText("");
                    }
                    break;
                }
                default: {
                    SourceAccountTextField.setText("");
                    DestinationAccountTextField.setText("");
                    AmountTextField.setText("");
                    break;
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ExecuteTransactionButtonActionPerformed

    private void RefreshUsersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshUsersButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) UsersTable.getModel();
        model.setRowCount(0);

        this.users.sort((obj1, obj2) -> (obj1.getId() - obj2.getId()));

        for (User user : this.users) {
            model.addRow(new Object[]{user.getId(), user.getFirstname() + " " + user.getLastname(), user.getAge(), user.getNumAccounts()});
        }
    }//GEN-LAST:event_RefreshUsersButtonActionPerformed

    private void RefreshAccountsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshAccountsButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) AccountsTable.getModel();
        model.setRowCount(0);

        this.accounts.sort((obj1, obj2) -> (obj1.getId().compareTo(obj2.getId())));

        for (Account account : this.accounts) {
            model.addRow(new Object[]{account.getId(), account.getOwner().getId(), account.getBalance()});
        }
    }//GEN-LAST:event_RefreshAccountsButtonActionPerformed

    private void RefreshTransactionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshTransactionsButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) TransactionsTable.getModel();
        model.setRowCount(0);

        ArrayList<Transaction> transactionsCopy = (ArrayList<Transaction>) this.transactions.clone();
        Collections.reverse(transactionsCopy);

        for (Transaction transaction : transactionsCopy) {
            model.addRow(new Object[]{transaction.getType().name(), (transaction.getSourceAccount() != null ? transaction.getSourceAccount().getId() : "None"), (transaction.getDestinationAccount() != null ? transaction.getDestinationAccount().getId() : "None"), transaction.getAmount()});
        }
    }//GEN-LAST:event_RefreshTransactionsButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AccountsTable;
    private javax.swing.JLabel AgeLabel;
    private javax.swing.JTextField AgeTextField;
    private javax.swing.JLabel AmountLabel;
    private javax.swing.JTextField AmountTextField;
    private javax.swing.JButton CreateAccountButton;
    private javax.swing.JLabel CreateAccountTitle;
    private javax.swing.JLabel DestinationAccountLabel;
    private javax.swing.JTextField DestinationAccountTextField;
    private javax.swing.JButton ExecuteTransactionButton;
    private javax.swing.JLabel FirstnameLabel;
    private javax.swing.JTextField FirstnameTextField;
    private javax.swing.JLabel IDLabel;
    private javax.swing.JTextField IDTextField;
    private javax.swing.JLabel InitialBalanceLabel;
    private javax.swing.JTextField InitialBalanceTextField;
    private javax.swing.JLabel LastnameLabel;
    private javax.swing.JTextField LastnameTextField;
    private javax.swing.JLabel ListAccountsTitle;
    private javax.swing.JLabel ListTransactionsTitle;
    private javax.swing.JLabel ListUsersTitle;
    private javax.swing.JLabel MakeTransactionTitle;
    private javax.swing.JButton RefreshAccountsButton;
    private javax.swing.JButton RefreshTransactionsButton;
    private javax.swing.JButton RefreshUsersButton;
    private javax.swing.JButton RegisterUserButton;
    private javax.swing.JLabel RegisterUserTitle;
    private javax.swing.JLabel SourceAccountLabel;
    private javax.swing.JTextField SourceAccountTextField;
    private javax.swing.JTable TransactionsTable;
    private javax.swing.JComboBox<String> TypeComboBox;
    private javax.swing.JLabel TypeLabel;
    private javax.swing.JLabel UserIDLabel;
    private javax.swing.JTextField UserIDTextField;
    private javax.swing.JTable UsersTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
